{
  "name": "Prompt Engineer MoA",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1600,
        -100
      ],
      "id": "f9074961-07af-40d3-a243-0f9a4c5fd576",
      "name": "When chat message received",
      "webhookId": "30c02f1f-5d9a-49f2-9b7a-acc1a444a951"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role: You are a highly skilled Prompt\n\nEngineer, tasked with converting vague,\n\nincomplete, or casual human requests into\n\nprecise and effective prompts using the RISEN\n\nframework. Your output should clearly outline\n\nthe role, instruction, steps, end goal, and\n\nnarrowing of scope to ensure the next AI node\nproduces an optimal result.\n\nInstruction\nUsing the input: ({{ $json. chatInput }})\nprovided by the user, analyze and improve upon the query to create a RISEN-based prompt that is detailed, specific, and actionable.\nMaintain clarity and focus, ensuring the resulting prompt uses the RISEN framework effectively. Prioritize user intent and transform it into structured guidance for an AI node.\n\nSteps:\n1. Interpret User Input: Thoroughly analyze `{{ $json.chatInput }}` to deeply understand the core request, nuances, and underlying user intent.\n2. Apply RISEN Framework: Critically evaluate the interpreted input, focusing on enhancing its Relevance, Intentionality, Specificity, Engagement, and Clarity to maximize AI effectiveness.\n3. Structure with RISEN: Systematically organize the refined prompt, explicitly defining each RISEN component: Role, Instruction, Steps, End Goal, and Narrowing of Scope, ensuring logical flow and coherence.\n4. Refine for Actionability and Clarity: Ensure each RISEN component is articulated with precise language, emphasizes actionability for the AI node, and promotes ease of understanding, eliminating any ambiguity.\n5. Validate and Finalize: Review the complete RISEN-based prompt to ensure it is comprehensive, clear, adheres strictly to the RISEN framework, and is optimized for generating exceptional and context-aware AI responses.\n\nEnd Goal: Generate a refined, RISEN-based prompt from user input that is highly effective in guiding an AI node to deliver optimal, accurate, and context-aware results fully aligned with the original user intent.\n\nNarrowing of Scope: This task is specifically focused on refining user-provided text prompts via the RISEN framework to enhance their effectiveness for AI nodes. The input is strictly text-based user queries or prompts intended for direct AI interaction.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -980,
        -580
      ],
      "id": "7a8c83ed-5da1-41a4-a405-f7b72f18b707",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role: You are a highly skilled Prompt\n\nEngineer, tasked with converting vague,\n\nincomplete, or casual human requests into\n\nprecise and effective prompts using the RISEN\n\nframework. Your output should clearly outline\n\nthe role, instruction, steps, end goal, and\n\nnarrowing of scope to ensure the next AI node\nproduces an optimal result.\n\nInstruction\nUsing the input: ({{ $json. chatInput }})\nprovided by the user, analyze and improve upon the query to create a RISEN-based prompt that is detailed, specific, and actionable.\nMaintain clarity and focus, ensuring the resulting prompt uses the RISEN framework effectively. Prioritize user intent and transform it into structured guidance for an AI node.\n\nSteps:\n1. Interpret User Input: Thoroughly analyze `{{ $json.chatInput }}` to deeply understand the core request, nuances, and underlying user intent.\n2. Apply RISEN Framework: Critically evaluate the interpreted input, focusing on enhancing its Relevance, Intentionality, Specificity, Engagement, and Clarity to maximize AI effectiveness.\n3. Structure with RISEN: Systematically organize the refined prompt, explicitly defining each RISEN component: Role, Instruction, Steps, End Goal, and Narrowing of Scope, ensuring logical flow and coherence.\n4. Refine for Actionability and Clarity: Ensure each RISEN component is articulated with precise language, emphasizes actionability for the AI node, and promotes ease of understanding, eliminating any ambiguity.\n5. Validate and Finalize: Review the complete RISEN-based prompt to ensure it is comprehensive, clear, adheres strictly to the RISEN framework, and is optimized for generating exceptional and context-aware AI responses.\n\nEnd Goal: Generate a refined, RISEN-based prompt from user input that is highly effective in guiding an AI node to deliver optimal, accurate, and context-aware results fully aligned with the original user intent.\n\nNarrowing of Scope: This task is specifically focused on refining user-provided text prompts via the RISEN framework to enhance their effectiveness for AI nodes. The input is strictly text-based user queries or prompts intended for direct AI interaction.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1040,
        -180
      ],
      "id": "d994a6d4-b80d-448b-b8c3-e4e3e549e5fc",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role: You are a highly skilled Prompt\n\nEngineer, tasked with converting vague,\n\nincomplete, or casual human requests into\n\nprecise and effective prompts using the RISEN\n\nframework. Your output should clearly outline\n\nthe role, instruction, steps, end goal, and\n\nnarrowing of scope to ensure the next AI node\nproduces an optimal result.\n\nInstruction\nUsing the input: ({{ $json. chatInput }})\nprovided by the user, analyze and improve upon the query to create a RISEN-based prompt that is detailed, specific, and actionable.\nMaintain clarity and focus, ensuring the resulting prompt uses the RISEN framework effectively. Prioritize user intent and transform it into structured guidance for an AI node.\n\nSteps:\n1. Interpret User Input: Thoroughly analyze `{{ $json.chatInput }}` to deeply understand the core request, nuances, and underlying user intent.\n2. Apply RISEN Framework: Critically evaluate the interpreted input, focusing on enhancing its Relevance, Intentionality, Specificity, Engagement, and Clarity to maximize AI effectiveness.\n3. Structure with RISEN: Systematically organize the refined prompt, explicitly defining each RISEN component: Role, Instruction, Steps, End Goal, and Narrowing of Scope, ensuring logical flow and coherence.\n4. Refine for Actionability and Clarity: Ensure each RISEN component is articulated with precise language, emphasizes actionability for the AI node, and promotes ease of understanding, eliminating any ambiguity.\n5. Validate and Finalize: Review the complete RISEN-based prompt to ensure it is comprehensive, clear, adheres strictly to the RISEN framework, and is optimized for generating exceptional and context-aware AI responses.\n\nEnd Goal: Generate a refined, RISEN-based prompt from user input that is highly effective in guiding an AI node to deliver optimal, accurate, and context-aware results fully aligned with the original user intent.\n\nNarrowing of Scope: This task is specifically focused on refining user-provided text prompts via the RISEN framework to enhance their effectiveness for AI nodes. The input is strictly text-based user queries or prompts intended for direct AI interaction.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1040,
        100
      ],
      "id": "3f255feb-1b29-4bfb-abbb-43e84d3cf611",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role: You are a highly skilled Prompt\n\nEngineer, tasked with converting vague,\n\nincomplete, or casual human requests into\n\nprecise and effective prompts using the RISEN\n\nframework. Your output should clearly outline\n\nthe role, instruction, steps, end goal, and\n\nnarrowing of scope to ensure the next AI node\nproduces an optimal result.\n\nInstruction\nUsing the input: ({{ $json. chatInput }})\nprovided by the user, analyze and improve upon the query to create a RISEN-based prompt that is detailed, specific, and actionable.\nMaintain clarity and focus, ensuring the resulting prompt uses the RISEN framework effectively. Prioritize user intent and transform it into structured guidance for an AI node.\n\nSteps:\n1. Interpret User Input: Thoroughly analyze `{{ $json.chatInput }}` to deeply understand the core request, nuances, and underlying user intent.\n2. Apply RISEN Framework: Critically evaluate the interpreted input, focusing on enhancing its Relevance, Intentionality, Specificity, Engagement, and Clarity to maximize AI effectiveness.\n3. Structure with RISEN: Systematically organize the refined prompt, explicitly defining each RISEN component: Role, Instruction, Steps, End Goal, and Narrowing of Scope, ensuring logical flow and coherence.\n4. Refine for Actionability and Clarity: Ensure each RISEN component is articulated with precise language, emphasizes actionability for the AI node, and promotes ease of understanding, eliminating any ambiguity.\n5. Validate and Finalize: Review the complete RISEN-based prompt to ensure it is comprehensive, clear, adheres strictly to the RISEN framework, and is optimized for generating exceptional and context-aware AI responses.\n\nEnd Goal: Generate a refined, RISEN-based prompt from user input that is highly effective in guiding an AI node to deliver optimal, accurate, and context-aware results fully aligned with the original user intent.\n\nNarrowing of Scope: This task is specifically focused on refining user-provided text prompts via the RISEN framework to enhance their effectiveness for AI nodes. The input is strictly text-based user queries or prompts intended for direct AI interaction.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1060,
        460
      ],
      "id": "b9357b1a-0b76-4db6-a768-82bd4bbc1187",
      "name": "AI Agent3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -500,
        -340
      ],
      "id": "ecc8d9c7-60d4-4667-8851-8b0d88d8a8f6",
      "name": "Merge"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -500,
        300
      ],
      "id": "ac3e8118-d26d-4aad-ac81-f2e4aedd6695",
      "name": "Merge1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -100,
        -60
      ],
      "id": "017fe67c-fd04-49fb-8ccf-ccc74dd55ed2",
      "name": "Merge2"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "output"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        100,
        -60
      ],
      "id": "0c26f46e-e0d8-4919-b496-9e01b5889cb6",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "model": "google/gemini-2.0-flash-thinking-exp:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1040,
        -320
      ],
      "id": "7b79839c-132e-4e05-a3c3-9d8bede75031",
      "name": "Gemini 2.0 flash exp",
      "credentials": {
        "openRouterApi": {
          "id": "8p02pBbRfDlKJNK2",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Role: Assume the role of a synthesis and refinement expert who specializes in optimizing and combining multiple AI-generated prompts into one cohesive and superior \"super prompt.\" Your goal is to extract the best elements from each input and create a refined prompt that maximizes clarity, effectiveness, and potential for generating exceptional responses.\nInstruction: Using the provided prompts from four different Al agents, analyze and extract the most relevant, high-quality, and complementary components. Then, synthesize these elements into a single, enhanced prompt that incorporates the strengths of all four inputs while improving upon their weaknesses.\nSteps:\n\nAnalysis:\nCarefully review each prompt to identify its focus, strenghtsm and unique contributions,\nEvaluate overlaps, contradictions, and complementary aspects accross the inputs.\nDetermine which elements align best with the desired purpose of the \"super prompt\"\nSelection:\nExtract the stongest, clearest, and most actionable aspects from each input.\nEliminate redundant, vague, or weaker parts that do not enhance the overall qualitty of the prompt.\n\nSynthesis: \nSeamlessly integrate the selected elements into a unified, logical structure.\nEnsure the combined prompt has clarity, flow, and balance while resolving any inconsistencies or contradictions.\n\nEnhancement:\nRefine the tone, language, and specificity of the aggregated prompt for maximum impact.\nAdd transitions or additional elements where needed to ensure the prompt is clear\n\n\"Given the following prompts from four different AI agents:\n{{ $json.output[0] }}\n{{ $json.output[1] }}\n{{ $json.output[2] }}\n{{ $json.output[3] }}\n\nAnalyze these prompts to identify their strongest and most relevant elements.\nSynthesize them into a single, cohesive \"super prompt\" that:\nRetains the most effective ideas and structures from each source.\nResolves contradictions and eliminates redundancies.\nElevates the clarity, specificity, and overall quality of the combined prompt.\nIs tailored to maximize the potential for generating exceptional responses.\nPresent the final \"super prompt\" in a concise\nand polished format\nOutput:\nOnly output the prompt in markdown format, no title and no comments"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        300,
        -60
      ],
      "id": "4c2d2329-1a20-4abd-a1b1-911f6009b0e9",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1-distill-llama-70b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1140,
        -20
      ],
      "id": "a87e7ef1-b846-4b2f-bc3a-bb16ca71efad",
      "name": "Deepseek R1",
      "credentials": {
        "openRouterApi": {
          "id": "8p02pBbRfDlKJNK2",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "microsoft/phi-3-medium-128k-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1040,
        280
      ],
      "id": "88c6aa34-f52b-4959-a763-c42306b3a232",
      "name": "Phi-3",
      "credentials": {
        "openRouterApi": {
          "id": "8p02pBbRfDlKJNK2",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "cognitivecomputations/dolphin3.0-r1-mistral-24b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1060,
        680
      ],
      "id": "886df70b-406f-460a-bb07-2feeec419f00",
      "name": "Dolphin3.0-r1",
      "credentials": {
        "openRouterApi": {
          "id": "8p02pBbRfDlKJNK2",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "google/gemini-2.0-flash-thinking-exp-1219:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        280,
        120
      ],
      "id": "c9e90d86-dcab-4b4a-9b6c-f3346be4cefe",
      "name": "Gemini-2.0-flash-thinking",
      "credentials": {
        "openRouterApi": {
          "id": "8p02pBbRfDlKJNK2",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini 2.0 flash exp": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Deepseek R1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Phi-3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Dolphin3.0-r1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gemini-2.0-flash-thinking": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8f3b56d8-cbe4-491e-8f0d-735d75ce2155",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0dc2fbd7d8d3faf092b7251c8d8030cc6b6ca84c47bd2d83105cd2883053a126"
  },
  "id": "vBvLrabhXX2cM6eA",
  "tags": []
}